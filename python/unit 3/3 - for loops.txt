last time we looked at while loops, the first type of loop in python.
today, we're looking at for-loops. the second type of loop.

for loops are more specific than while loops, but still very useful. 

they're built for sequences, so before you start looping, you'll need
a sequence. i'll use a string, and set that to x.

then we can write our for-loop. start with the keyword 'for'. 
follow that with the name of a new variable. i'll name mine 
'letter' and you'll see why in a second. then the keyword 'in'
followed by your sequence and a colon. 

we learned about the 'in' operator in our lists lesson, but don't get 
confused, this means something different. 

you probably guessed it: after your colon, you can start a block on the
following lines. 

so what does the for loop do? and how many times does it repeat?

the for loop will repeat it's block for every item in the sequence

in the block, i'm just going to simply print 'hi'. 
let's look at the output.

x = 'hello'

for letter in x:
    print('hi')

[run]

as you can see, the loop ran 5 times, so we have 5 prints in the terminal.
it ran 5 times because x is five items long. pretty simple.

the for loop also gives you which item it's looping over. 
this value is stored in the variable you specified, right 
before the word 'in'. In this case, the variable is letter.

instead of printing "hi's" let's print letter.

x = 'hello'

for letter in x:
    print(letter)

[run]

here the value of 'letter' changed each time the block ran. 
it started with the first item in the sequence
and ended with the last.

this is called iteration. 
the loop runs through each item in the sequence, or iterates over it. 

let's look at an example using a list.

models = ['J8', 'J12', 'J18', 'J20', 'L4', 'L6']

for model in models:
    print(model)

this is the exact same setup, except it uses a list of model numbers instead
of letters. 

- ask the users for numbers until STOP, then take the sum (highest, lowest, average, median?)